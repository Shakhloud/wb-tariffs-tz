import { CronJob } from "cron";
import { ApiService } from "../services/apiService.js";
import { DatabaseService } from "../services/databaseService.js";
import { GoogleSheetsService } from "./googleSheetsService.js";
import env from "../config/env/env.js";

export class SchedulerService {
    private apiService: ApiService;
    private databaseService: DatabaseService;
    private googleSheetsService: GoogleSheetsService;
    private isRunning: boolean = false;
    private lastUpdateTime: Date | null = null;

    constructor() {
        this.apiService = new ApiService();
        this.databaseService = new DatabaseService();
        this.googleSheetsService = new GoogleSheetsService();
    }

    /** –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö */
    start(): void {
        console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google —Ç–∞–±–ª–∏—Ü...");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        this.validateConfiguration();

        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        this.executeFullUpdate().catch((error) => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:", error);
        });

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        const cronExpression = String(env.SCHEDULER_CRON);

        const job = new CronJob(cronExpression, async () => {
            await this.executeFullUpdate();
        });

        job.start();

        console.log("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É");
        console.log(`üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ${cronExpression}`);
        console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Google —Ç–∞–±–ª–∏—Ü: ${env.GOOGLE_SHEET_IDS.length}`);
    }

    /** –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º */
    private validateConfiguration(): void {
        const sheetIds = env.GOOGLE_SHEET_IDS;

        if (!sheetIds || sheetIds.length === 0) {
            console.warn("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ —É–∫–∞–∑–∞–Ω—ã ID Google —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è");
            console.log("üí° –î–æ–±–∞–≤—å—Ç–µ GOOGLE_SHEET_IDS –≤ .env —Ñ–∞–π–ª");
        } else {
            console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ ${sheetIds.length} Google —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è`);
        }

        if (!env.GOOGLE_SERVICE_ACCOUNT_EMAIL || !env.GOOGLE_PRIVATE_KEY) {
            console.warn("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Service Account");
        } else {
            console.log("‚úÖ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Service Account –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
        }
    }

    /** –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: API ‚Üí –ë–î ‚Üí Google Sheets */
    async executeFullUpdate(): Promise<void> {
        if (this.isRunning) {
            console.log("‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...");
            return;
        }

        this.isRunning = true;
        const startTime = Date.now();

        try {
            console.log("\nüîÑ === –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø ===");
            console.log(`üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toISOString()}`);

            // 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ WB API
            console.log("üì° –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WB API...");
            const apiData = await this.apiService.fetchTariffs(new Date());
            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${apiData.response.data.warehouseList.length} —Å–∫–ª–∞–¥–æ–≤`);

            // 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
            console.log("üíæ –®–∞–≥ 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...");
            const saveResult = await this.databaseService.saveFullTariffData(apiData);
            console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î: ${saveResult.totalWarehouses} —Å–∫–ª–∞–¥–æ–≤`);

            // 3. –û–±–Ω–æ–≤–ª—è–µ–º Google —Ç–∞–±–ª–∏—Ü—ã
            console.log("üìä –®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google —Ç–∞–±–ª–∏—Ü...");
            await this.executeGoogleSheetsUpdate();

            this.lastUpdateTime = new Date();
            const executionTime = Date.now() - startTime;

            console.log(`‚úÖ === –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û ===`);
            console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${executionTime}ms`);
            console.log(`üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${this.lastUpdateTime.toISOString()}`);
        } catch (error) {
            console.error("‚ùå === –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò ===");

            if (error instanceof Error) {
                console.error(`üí° –û—à–∏–±–∫–∞: ${error.message}`);
            }

            await this.handleUpdateError(error);
        } finally {
            this.isRunning = false;
        }
    }

    /** –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ Google —Ç–∞–±–ª–∏—Ü (–¥–∞–Ω–Ω—ã–µ —É–∂–µ –≤ –ë–î) */
    async executeGoogleSheetsUpdate(): Promise<void> {
        const sheetIds = env.GOOGLE_SHEET_IDS;

        if (!sheetIds || sheetIds.length === 0) {
            console.log("üì≠ –ù–µ—Ç Google —Ç–∞–±–ª–∏—Ü –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è");
            return;
        }

        console.log(`üîÑ –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${sheetIds.length} Google —Ç–∞–±–ª–∏—Ü...`);

        try {
            // –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
            console.log("üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î...");
            const tariffsData = await this.databaseService.getFullDataForGoogleSheets();

            if (!tariffsData || tariffsData.length === 0) {
                console.log("üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü");
                return;
            }

            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${tariffsData.length} –∑–∞–ø–∏—Å–µ–π, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—É`);

            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
            console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ ${sheetIds.length} Google —Ç–∞–±–ª–∏—Ü...`);

            const updatePromises = sheetIds.map((sheetId, index) => this.updateSingleSheet(sheetId, tariffsData, index + 1));

            await Promise.all(updatePromises);

            console.log(`‚úÖ –í—Å–µ ${sheetIds.length} Google —Ç–∞–±–ª–∏—Ü —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Google —Ç–∞–±–ª–∏—Ü:", error);
            throw error;
        }
    }

    /** –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–¥–Ω—É Google —Ç–∞–±–ª–∏—Ü—É */
    private async updateSingleSheet(sheetId: string, tariffsData: any[], sheetNumber: number): Promise<void> {
        try {
            console.log(`   ${sheetNumber}. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: ${sheetId}...`);

            await this.googleSheetsService.updateSheet(sheetId, tariffsData);

            console.log(`   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${sheetNumber} –æ–±–Ω–æ–≤–ª–µ–Ω–∞`);
        } catch (error) {
            console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã ${sheetId}:`, error);
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            throw error;
        }
    }

    /** –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */
    private async handleUpdateError(error: any): Promise<void> {
        console.error("üö® –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:");
        console.error("   üí° –¢–∏–ø:", typeof error);
        console.error("   üí° –°–æ–æ–±—â–µ–Ω–∏–µ:", error.message);
        console.error("   üí° Stack:", error.stack);

        // –î–ª—è –º–∏–Ω—É—Ç–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –Ω–µ –¥–µ–ª–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏,
        // —Ç.–∫. —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
        console.log("üîÑ –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é");
    }

    /** –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ */
    getStatus(): {
        isRunning: boolean;
        lastUpdate: string | null;
        nextUpdate: string;
        configuredSheets: number;
        updateInterval: string;
    } {
        const now = new Date();
        const nextUpdate = new Date(now);
        nextUpdate.setMinutes(now.getMinutes() + 1); // –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É

        return {
            isRunning: this.isRunning,
            lastUpdate: this.lastUpdateTime?.toISOString() || null,
            nextUpdate: nextUpdate.toISOString(),
            configuredSheets: env.GOOGLE_SHEET_IDS.length,
            updateInterval: "1 –º–∏–Ω—É—Ç–∞",
        };
    }

    /** –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π */
    getStats(): {
        totalUpdates: number;
        lastSuccess: string | null;
        averageTime: number | null;
    } {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        return {
            totalUpdates: 0, // TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–¥—Å—á–µ—Ç
            lastSuccess: this.lastUpdateTime?.toISOString() || null,
            averageTime: null, // TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–∞—Å—á–µ—Ç
        };
    }

    /** –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ */
    stop(): void {
        console.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...");
        this.isRunning = false;
    }
}
